// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProblemTwoScene renders correctly on load 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="problemTwoContainer"
      >
        <div
          class="MuiPaper-root MuiPaper-elevation3 MuiPaper-rounded"
        >
          <div
            class="row header"
          >
            <h1>
              Problem Two
            </h1>
          </div>
          <div
            class="row data"
          >
            <label
              aria-disabled="false"
              class="MuiButtonBase-root MuiButton-root MuiButton-contained"
              role="button"
              tabindex="0"
            >
              <span
                class="MuiButton-label"
              >
                Select data source
                <input
                  hidden=""
                  type="file"
                />
              </span>
              <span
                class="MuiTouchRipple-root"
              />
            </label>
          </div>
          <div
            class="row evaluate"
          >
            <button
              class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
              disabled=""
              tabindex="-1"
              type="button"
            >
              <span
                class="MuiButton-label"
              >
                Evaluate
              </span>
            </button>
          </div>
          <div
            class="solution"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="problemTwoContainer"
    >
      <div
        class="MuiPaper-root MuiPaper-elevation3 MuiPaper-rounded"
      >
        <div
          class="row header"
        >
          <h1>
            Problem Two
          </h1>
        </div>
        <div
          class="row data"
        >
          <label
            aria-disabled="false"
            class="MuiButtonBase-root MuiButton-root MuiButton-contained"
            role="button"
            tabindex="0"
          >
            <span
              class="MuiButton-label"
            >
              Select data source
              <input
                hidden=""
                type="file"
              />
            </span>
            <span
              class="MuiTouchRipple-root"
            />
          </label>
        </div>
        <div
          class="row evaluate"
        >
          <button
            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary Mui-disabled Mui-disabled"
            disabled=""
            tabindex="-1"
            type="button"
          >
            <span
              class="MuiButton-label"
            >
              Evaluate
            </span>
          </button>
        </div>
        <div
          class="solution"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`ProblemTwoScene renders correctly when onclick the button 1`] = `
<div
  class="problemTwoContainer"
>
  <div
    class="MuiPaper-root MuiPaper-elevation3 MuiPaper-rounded"
  >
    <div
      class="row header"
    >
      <h1>
        Problem Two
      </h1>
    </div>
    <div
      class="row data"
    >
      <label
        aria-disabled="false"
        class="MuiButtonBase-root MuiButton-root MuiButton-contained"
        role="button"
        tabindex="0"
      >
        <span
          class="MuiButton-label"
        >
          Select data source
          <input
            hidden=""
            type="file"
          />
        </span>
        <span
          class="MuiTouchRipple-root"
        />
      </label>
    </div>
    <div
      class="row evaluate"
    >
      <button
        class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
        tabindex="0"
        type="button"
      >
        <span
          class="MuiButton-label"
        >
          Evaluate
        </span>
        <span
          class="MuiTouchRipple-root"
        />
      </button>
    </div>
    <div
      class="solution"
    >
      <div
        class="MuiPaper-root MuiAlert-root MuiAlert-standardSuccess MuiPaper-elevation0"
        role="alert"
      >
        <div
          class="MuiAlert-icon"
        >
          <svg
            aria-hidden="true"
            class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
            focusable="false"
            viewBox="0 0 24 24"
          >
            <path
              d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
            />
          </svg>
        </div>
        <div
          class="MuiAlert-message"
        >
          String Constraint Solution: 
          2 valid
        </div>
      </div>
      <div
        class="MuiPaper-root MuiAlert-root MuiAlert-standardSuccess MuiPaper-elevation0"
        role="alert"
      >
        <div
          class="MuiAlert-icon"
        >
          <svg
            aria-hidden="true"
            class="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
            focusable="false"
            viewBox="0 0 24 24"
          >
            <path
              d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
            />
          </svg>
        </div>
        <div
          class="MuiAlert-message"
        >
          String Constraint V2 Solution: 
          1 valid
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`ProblemTwoScene renders correctly with some inintial values 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="problemTwoContainer"
      >
        <div
          class="MuiPaper-root MuiPaper-elevation3 MuiPaper-rounded"
        >
          <div
            class="row header"
          >
            <h1>
              Problem Two
            </h1>
          </div>
          <div
            class="row data"
          >
            <label
              aria-disabled="false"
              class="MuiButtonBase-root MuiButton-root MuiButton-contained"
              role="button"
              tabindex="0"
            >
              <span
                class="MuiButton-label"
              >
                Select data source
                <input
                  hidden=""
                  type="file"
                />
              </span>
              <span
                class="MuiTouchRipple-root"
              />
            </label>
          </div>
          <div
            class="row evaluate"
          >
            <button
              class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
              tabindex="0"
              type="button"
            >
              <span
                class="MuiButton-label"
              >
                Evaluate
              </span>
              <span
                class="MuiTouchRipple-root"
              />
            </button>
          </div>
          <div
            class="solution"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="problemTwoContainer"
    >
      <div
        class="MuiPaper-root MuiPaper-elevation3 MuiPaper-rounded"
      >
        <div
          class="row header"
        >
          <h1>
            Problem Two
          </h1>
        </div>
        <div
          class="row data"
        >
          <label
            aria-disabled="false"
            class="MuiButtonBase-root MuiButton-root MuiButton-contained"
            role="button"
            tabindex="0"
          >
            <span
              class="MuiButton-label"
            >
              Select data source
              <input
                hidden=""
                type="file"
              />
            </span>
            <span
              class="MuiTouchRipple-root"
            />
          </label>
        </div>
        <div
          class="row evaluate"
        >
          <button
            class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
            tabindex="0"
            type="button"
          >
            <span
              class="MuiButton-label"
            >
              Evaluate
            </span>
            <span
              class="MuiTouchRipple-root"
            />
          </button>
        </div>
        <div
          class="solution"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
